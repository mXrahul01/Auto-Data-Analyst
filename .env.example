# =============================================================================
# üöÄ AUTO-DATA-ANALYST PLATFORM - ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
#
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env in your project root
# 2. Replace ALL placeholder values with your actual configuration
# 3. Generate secure secrets using: openssl rand -hex 32 or python -c "import secrets; print(secrets.token_hex(32))"
# 4. NEVER commit .env files to version control (add to .gitignore)
# 5. Use different .env files for different environments (dev, staging, prod)
#
# üîí SECURITY NOTICE:
# - Generate unique secrets for each environment
# - Use minimum 32-character secrets
# - Rotate secrets regularly in production
# - Enable HTTPS in production
# - Use strong database passwords
# =============================================================================

# =============================================================================
# üåê CORE APPLICATION SETTINGS
# =============================================================================

# Environment: development, staging, production
ENVIRONMENT=development

# Debug mode (‚ö†Ô∏è NEVER enable in production)
DEBUG=true

# Application metadata
APP_NAME=Auto-Data-Analyst Platform
APP_VERSION=2.0.0
API_V1_STR=/api/v1
APP_DESCRIPTION=AI-Powered Automated Data Analysis Platform

# =============================================================================
# üîê SECURITY CONFIGURATION (‚ö†Ô∏è CRITICAL - MUST CHANGE)
# =============================================================================

# Main application secret key (üö® GENERATE UNIQUE KEY: openssl rand -hex 32)
SECRET_KEY=REPLACE-WITH-YOUR-SECURE-64-CHAR-SECRET-KEY-GENERATED-BY-OPENSSL-RAND-HEX-32

# JWT authentication secrets (üö® GENERATE UNIQUE KEY: openssl rand -hex 32)
JWT_SECRET_KEY=REPLACE-WITH-YOUR-SECURE-64-CHAR-JWT-SECRET-GENERATED-BY-OPENSSL-RAND-HEX-32
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# API security
API_SECRET_KEY=REPLACE-WITH-YOUR-SECURE-API-SECRET-KEY-GENERATED-BY-OPENSSL-RAND-HEX-32
API_RATE_LIMIT_PER_MINUTE=100
API_RATE_LIMIT_BURST=20

# Password security
PASSWORD_MIN_LENGTH=8
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_SPECIAL_CHARS=true

# =============================================================================
# üñ•Ô∏è SERVER CONFIGURATION
# =============================================================================

# Server binding
HOST=0.0.0.0
PORT=8000

# Worker processes (set to CPU core count in production)
WORKERS=1
WORKER_CONNECTIONS=1000
WORKER_TIMEOUT=120
KEEPALIVE_TIMEOUT=5

# Request limits
MAX_REQUEST_SIZE=104857600
REQUEST_TIMEOUT=60

# WebSocket support (for real-time ML progress)
ENABLE_WEBSOCKET=true
WEBSOCKET_HEARTBEAT_INTERVAL=30

# =============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION - RENDER POSTGRESQL READY
# =============================================================================

# üéØ PRIMARY: Render PostgreSQL Database URL (RECOMMENDED)
# Replace with your actual Render PostgreSQL connection string
# Example format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://your-render-db-user:your-render-db-password@your-render-db-host.singapore-postgres.render.com:5432/your-render-db-name

# üìä ALTERNATIVE: Individual database components (backup method)
DB_TYPE=postgresql
DB_HOST=your-render-db-host.singapore-postgres.render.com
DB_HOST_INTERNAL=your-render-db-host-internal
DB_PORT=5432
DB_USER=your-render-db-user
DB_PASSWORD=your-render-db-password
DB_NAME=your-render-db-name

# üöÄ Database performance optimization (tuned for ML/DS workloads)
DB_POOL_SIZE=15
DB_MAX_OVERFLOW=25
DB_POOL_TIMEOUT=60
DB_POOL_RECYCLE=3600
DB_ECHO=false
DB_SSL_MODE=require

# Database connection health
DB_HEALTH_CHECK_INTERVAL=30
DB_RECONNECT_ATTEMPTS=3

# =============================================================================
# üì¶ REDIS & CACHING CONFIGURATION
# =============================================================================

# Redis connection (for ML job queues and caching)
REDIS_URL=redis://localhost:6379/0
REDIS_MAX_CONNECTIONS=50
REDIS_CONNECTION_TIMEOUT=10
REDIS_SOCKET_KEEPALIVE=true

# Cache settings optimized for ML/DS
ENABLE_CACHING=true
CACHE_TTL_DEFAULT=3600
CACHE_TTL_ML_MODELS=7200
CACHE_TTL_DATASETS=1800
CACHE_TTL_SHORT=300
CACHE_MAX_SIZE=1000

# ML result caching
ENABLE_ML_RESULT_CACHING=true
ML_CACHE_EXPIRY_HOURS=24

# =============================================================================
# üìÅ FILE STORAGE & UPLOAD CONFIGURATION
# =============================================================================

# Upload limits (optimized for ML datasets)
UPLOAD_MAX_SIZE=2147483648
UPLOAD_MAX_FILES=20
ALLOWED_FILE_TYPES=csv,json,xlsx,xls,parquet,txt,tsv,jsonl

# Storage directories (ensure these exist)
UPLOAD_DIRECTORY=./data/uploads
TEMP_DIRECTORY=./data/temp
DATASETS_DIRECTORY=./data/datasets
MODELS_DIRECTORY=./models
ARTIFACTS_DIRECTORY=./artifacts
EXPORTS_DIRECTORY=./data/exports

# File processing
CHUNK_SIZE=8388608
AUTO_CLEANUP_TEMP_FILES=true
TEMP_FILE_RETENTION_HOURS=24
ENABLE_FILE_COMPRESSION=true

# Dataset validation
MAX_DATASET_COLUMNS=1000
MAX_DATASET_ROWS=1000000
ENABLE_DATA_VALIDATION=true

# =============================================================================
# ü§ñ MACHINE LEARNING CONFIGURATION
# =============================================================================

# ML Backend and hardware
DEFAULT_ML_BACKEND=local
ENABLE_GPU=false
GPU_MEMORY_FRACTION=0.8
CUDA_VISIBLE_DEVICES=0

# Training limits and defaults
MAX_TRAINING_TIME_SECONDS=7200
MAX_DATASET_SIZE_MB=2048
DEFAULT_TEST_SIZE=0.2
DEFAULT_VALIDATION_SIZE=0.1
DEFAULT_RANDOM_STATE=42

# Model management
MODEL_CACHE_SIZE=10
MODEL_CACHE_TTL=7200
AUTO_MODEL_CLEANUP=true
MODEL_VERSION_LIMIT=5

# Feature engineering
MAX_FEATURES=1000
ENABLE_AUTO_FEATURE_SELECTION=true
FEATURE_SELECTION_THRESHOLD=0.01
ENABLE_FEATURE_SCALING=true

# ML algorithms configuration
ENABLE_ENSEMBLE_METHODS=true
DEFAULT_CV_FOLDS=5
ENABLE_HYPERPARAMETER_TUNING=true
HYPERPARAMETER_TUNING_MAX_EVALS=50

# =============================================================================
# üî¨ MLOPS & EXPERIMENT TRACKING
# =============================================================================

# Experiment tracking
ENABLE_EXPERIMENT_TRACKING=true
EXPERIMENT_STORAGE_PATH=./experiments
AUTO_LOG_METRICS=true
AUTO_LOG_ARTIFACTS=true

# MLflow configuration (optional)
MLFLOW_TRACKING_URI=http://localhost:5000
MLFLOW_EXPERIMENT_NAME=auto-analyst-experiments
MLFLOW_ARTIFACT_ROOT=./mlruns
MLFLOW_BACKEND_STORE_URI=sqlite:///mlflow.db

# Model registry
ENABLE_MODEL_REGISTRY=true
MODEL_STAGE_TRANSITION_AUTO=false
MODEL_REGISTRY_BACKEND=local

# =============================================================================
# ‚òÅÔ∏è REMOTE TRAINING PLATFORMS (Optional)
# =============================================================================

# Kaggle API integration
ENABLE_KAGGLE_INTEGRATION=false
KAGGLE_USERNAME=your-kaggle-username
KAGGLE_KEY=your-kaggle-api-key

# Google Colab integration
ENABLE_COLAB_INTEGRATION=false
COLAB_NOTEBOOK_TEMPLATE=https://colab.research.google.com/your-template-url

# AWS SageMaker (optional)
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_REGION=us-east-1
AWS_SAGEMAKER_ROLE=your-sagemaker-execution-role

# Google Cloud AI Platform (optional)
GCP_PROJECT_ID=your-gcp-project-id
GCP_SERVICE_ACCOUNT_KEY_PATH=./credentials/gcp-service-account.json

# =============================================================================
# üìä MONITORING & OBSERVABILITY
# =============================================================================

# Application monitoring
ENABLE_MONITORING=true
ENABLE_PERFORMANCE_PROFILING=false
ENABLE_ML_MONITORING=true

# Metrics and health checks
PROMETHEUS_ENABLED=false
PROMETHEUS_PORT=8001
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# Performance tracking
TRACK_ML_PERFORMANCE=true
TRACK_DATABASE_PERFORMANCE=true
SLOW_QUERY_THRESHOLD=1.0

# =============================================================================
# üìù LOGGING CONFIGURATION
# =============================================================================

# Logging levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE_PATH=./logs/app.log

# Specialized logging
ENABLE_REQUEST_LOGGING=true
ENABLE_ML_LOGGING=true
ENABLE_DATABASE_LOGGING=false
ENABLE_ERROR_TRACKING=true

# Log rotation
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=5
LOG_ROTATION_INTERVAL=daily

# =============================================================================
# üìß EXTERNAL SERVICES & NOTIFICATIONS
# =============================================================================

# Email configuration (for notifications and user management)
ENABLE_EMAIL_NOTIFICATIONS=false
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USE_TLS=true
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-specific-password
EMAIL_FROM=noreply@auto-analyst.com
EMAIL_FROM_NAME=Auto-Analyst Platform

# Webhook notifications (for ML job completion)
ENABLE_WEBHOOK_NOTIFICATIONS=false
WEBHOOK_URL=https://your-webhook-endpoint.com/notify
WEBHOOK_SECRET=your-webhook-secret-key
WEBHOOK_TIMEOUT=30

# Slack integration (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_CHANNEL=#ml-notifications

# =============================================================================
# üåê CORS & SECURITY CONFIGURATION
# =============================================================================

# CORS settings (adjust for your frontend domains)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,https://your-frontend.onrender.com
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD
CORS_HEADERS=*
CORS_CREDENTIALS=true
CORS_MAX_AGE=86400

# Security headers
ENABLE_SECURITY_HEADERS=true
HSTS_MAX_AGE=31536000
CSP_POLICY=default-src 'self'

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=20
RATE_LIMIT_ML_JOBS_PER_HOUR=10

# SSL/TLS (for production deployment)
ENABLE_HTTPS=false
FORCE_HTTPS=false
SSL_CERT_PATH=./certs/cert.pem
SSL_KEY_PATH=./certs/key.pem

# =============================================================================
# üöÄ RENDER.COM DEPLOYMENT SETTINGS
# =============================================================================

# Render platform detection
RENDER=false
RENDER_INTERNAL_HOST=0.0.0.0
RENDER_EXTERNAL_URL=https://your-app.onrender.com
RENDER_SERVICE_NAME=auto-data-analyst

# Auto-scaling settings
AUTO_SCALE_ENABLED=true
MIN_INSTANCES=1
MAX_INSTANCES=3
SCALE_UP_CPU_THRESHOLD=70
SCALE_DOWN_CPU_THRESHOLD=30

# =============================================================================
# üê≥ CONTAINER & DEPLOYMENT
# =============================================================================

# Docker settings
DOCKER_BUILDKIT=1
PYTHONPATH=/app
PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1

# Container health
CONTAINER_HEALTH_CHECK_INTERVAL=30s
CONTAINER_HEALTH_CHECK_TIMEOUT=10s
CONTAINER_HEALTH_CHECK_RETRIES=3

# =============================================================================
# üõ†Ô∏è DEVELOPMENT & DEBUGGING
# =============================================================================

# Development features (üö® DISABLE IN PRODUCTION)
AUTO_RELOAD=true
ENABLE_DEBUG_TOOLBAR=true
MOCK_EXTERNAL_SERVICES=false
ENABLE_PROFILING=false

# Development ML settings
USE_SAMPLE_DATASETS=true
ENABLE_ML_DEBUGGING=true
SKIP_MODEL_VALIDATION=false

# =============================================================================
# üß™ TESTING CONFIGURATION
# =============================================================================

# Testing mode
TESTING=false
TEST_DATABASE_URL=sqlite:///./test_auto_analyst.db
TEST_REDIS_URL=redis://localhost:6379/15

# Test settings
PYTEST_WORKERS=auto
ENABLE_TEST_FIXTURES=true
TEST_TIMEOUT=300

# =============================================================================
# üéõÔ∏è FEATURE FLAGS
# =============================================================================

# Core features
ENABLE_USER_REGISTRATION=true
ENABLE_DATA_UPLOAD=true
ENABLE_MODEL_TRAINING=true
ENABLE_BATCH_PROCESSING=true
ENABLE_REAL_TIME_ANALYSIS=false
ENABLE_COLLABORATIVE_FEATURES=false

# Advanced features
ENABLE_AUTOMATED_ML=true
ENABLE_DEEP_LEARNING=false
ENABLE_TIME_SERIES_ANALYSIS=true
ENABLE_NLP_ANALYSIS=false
ENABLE_COMPUTER_VISION=false

# Experimental features
ENABLE_EXPERIMENTAL_FEATURES=false
ENABLE_BETA_ML_MODELS=false
ENABLE_QUANTUM_ML=false

# =============================================================================
# üíæ RESOURCE LIMITS & QUOTAS
# =============================================================================

# User quotas
MAX_DATASETS_PER_USER=25
MAX_MODELS_PER_USER=15
MAX_ANALYSES_PER_DAY=100
MAX_STORAGE_PER_USER_MB=5120

# System resource limits
MAX_CONCURRENT_TRAINING_JOBS=5
MAX_MEMORY_USAGE_MB=4096
MAX_CPU_USAGE_PERCENT=80
MAX_DISK_USAGE_PERCENT=85

# ML job limits
MAX_ML_JOB_DURATION_HOURS=4
MAX_PARALLEL_ML_JOBS_PER_USER=2
ML_JOB_QUEUE_SIZE=50

# =============================================================================
# üíæ BACKUP & RECOVERY
# =============================================================================

# Backup settings
ENABLE_AUTO_BACKUP=false
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=./backups
BACKUP_COMPRESSION=true

# Database backup
ENABLE_DB_BACKUP=true
DB_BACKUP_SCHEDULE=0 2 * * *
DB_BACKUP_RETENTION_DAYS=7

# =============================================================================
# üîç ANALYTICS & TELEMETRY
# =============================================================================

# Usage analytics
ENABLE_USAGE_ANALYTICS=true
ANALYTICS_RETENTION_DAYS=90
TRACK_USER_BEHAVIOR=true
TRACK_MODEL_PERFORMANCE=true

# Error tracking
ENABLE_ERROR_TRACKING=true
ERROR_TRACKING_SAMPLE_RATE=1.0

# Performance metrics
COLLECT_PERFORMANCE_METRICS=true
METRICS_COLLECTION_INTERVAL=60

# =============================================================================
# üìä DATA PROCESSING CONFIGURATION
# =============================================================================

# Data processing limits
MAX_PROCESSING_TIME_MINUTES=60
ENABLE_PARALLEL_PROCESSING=true
MAX_PARALLEL_PROCESSES=4

# Data quality
ENABLE_DATA_PROFILING=true
DATA_QUALITY_THRESHOLD=0.7
MISSING_DATA_THRESHOLD=0.3
OUTLIER_DETECTION_METHOD=iqr

# Data preprocessing
AUTO_HANDLE_MISSING_VALUES=true
AUTO_ENCODE_CATEGORICAL=true
AUTO_SCALE_FEATURES=true
AUTO_REMOVE_DUPLICATES=true

# =============================================================================
# üé® UI/UX CONFIGURATION
# =============================================================================

# Frontend settings
FRONTEND_BASE_URL=http://localhost:3000
ENABLE_DARK_MODE=true
DEFAULT_THEME=light
ENABLE_TUTORIALS=true

# Dashboard settings
DEFAULT_DASHBOARD_REFRESH_INTERVAL=30
MAX_DASHBOARD_WIDGETS=20
ENABLE_REAL_TIME_CHARTS=true

# =============================================================================
# üìà BUSINESS LOGIC CONFIGURATION
# =============================================================================

# Subscription tiers (if implementing paid features)
ENABLE_SUBSCRIPTION_TIERS=false
FREE_TIER_DATASET_LIMIT=5
FREE_TIER_MODEL_LIMIT=2
PREMIUM_TIER_DATASET_LIMIT=50

# Collaboration features
ENABLE_TEAM_WORKSPACES=false
MAX_TEAM_MEMBERS=10
ENABLE_PROJECT_SHARING=true

# =============================================================================
# üö¶ VALIDATION RULES & EXAMPLES
# =============================================================================

# SECRET_KEY examples (generate your own!):
# Using openssl: openssl rand -hex 32
# Using Python: python -c "import secrets; print(secrets.token_hex(32))"
# Result format: 64-character hexadecimal string

# DATABASE_URL formats:
# SQLite (dev): sqlite:///./auto_analyst.db
# PostgreSQL: postgresql://user:pass@host:port/dbname
# PostgreSQL+asyncpg: postgresql+asyncpg://user:pass@host:port/dbname
# MySQL: mysql+pymysql://user:pass@host:port/dbname

# REDIS_URL formats:
# Local: redis://localhost:6379/0
# With password: redis://:password@localhost:6379/0
# With username: redis://username:password@localhost:6379/0

# File size examples (in bytes):
# 1 MB = 1048576
# 10 MB = 10485760
# 100 MB = 104857600
# 500 MB = 524288000
# 1 GB = 1073741824
# 2 GB = 2147483648

# =============================================================================
# üéØ QUICK START CHECKLIST
# =============================================================================
# ‚úÖ 1. Copy this file to .env
# ‚úÖ 2. Generate SECRET_KEY: openssl rand -hex 32
# ‚úÖ 3. Generate JWT_SECRET_KEY: openssl rand -hex 32
# ‚úÖ 4. Set your DATABASE_URL (Render PostgreSQL)
# ‚úÖ 5. Configure CORS_ORIGINS for your frontend
# ‚úÖ 6. Set ENVIRONMENT=production for deployment
# ‚úÖ 7. Disable DEBUG=false for production
# ‚úÖ 8. Create required directories (uploads, models, logs)
# ‚úÖ 9. Test with: python -m backend.models.database
# ‚úÖ 10. Deploy and monitor!

# =============================================================================
# END OF CONFIGURATION TEMPLATE
# =============================================================================
